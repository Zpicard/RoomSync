{"ast":null,"code":"import axios from 'axios';\nconst API_BASE_URL = process.env.REACT_APP_API_URL || 'http://localhost:8080/api';\nconst apiClient = axios.create({\n  baseURL: API_BASE_URL,\n  headers: {\n    'Content-Type': 'application/json'\n  }\n});\n\n// Add request interceptor to add auth token\napiClient.interceptors.request.use(config => {\n  const token = localStorage.getItem('token');\n  if (token && config.headers) {\n    config.headers.Authorization = `Bearer ${token}`;\n  }\n  return config;\n}, error => {\n  return Promise.reject(error);\n});\n\n// Add response interceptor to handle errors\napiClient.interceptors.response.use(response => response, error => {\n  var _error$response, _error$config$url;\n  // Only clear token and redirect on 401 if it's not a login request\n  if (((_error$response = error.response) === null || _error$response === void 0 ? void 0 : _error$response.status) === 401 && !((_error$config$url = error.config.url) !== null && _error$config$url !== void 0 && _error$config$url.includes('/auth/login'))) {\n    localStorage.removeItem('token');\n    localStorage.removeItem('householdId');\n  }\n  return Promise.reject(error);\n});\n\n// Auth endpoints\nexport const auth = {\n  login: (email, password) => apiClient.post('/auth/login', {\n    email,\n    password\n  }),\n  register: (username, email, password) => apiClient.post('/auth/register', {\n    username,\n    email,\n    password\n  }),\n  verifyToken: () => apiClient.get('/auth/verify'),\n  getProfile: () => apiClient.get('/auth/profile')\n};\n\n// Household endpoints\nexport const household = {\n  create: name => apiClient.post('/households', {\n    name\n  }),\n  join: code => apiClient.post('/households/join', {\n    code\n  }),\n  leave: householdId => apiClient.post(`/households/${householdId}/leave`),\n  getCurrent: () => apiClient.get('/households/current'),\n  getMembers: householdId => apiClient.get(`/households/${householdId}/members`),\n  getDetails: householdId => apiClient.get(`/households/${householdId}`)\n};\n\n// Task endpoints\nexport const tasks = {\n  create: (householdId, data) => apiClient.post(`/tasks`, {\n    ...data,\n    householdId\n  }),\n  getHouseholdTasks: householdId => apiClient.get(`/tasks/household/${householdId}`),\n  updateStatus: (taskId, status) => apiClient.patch(`/tasks/${taskId}/status`, {\n    status\n  }),\n  assignTask: (taskId, userId) => apiClient.patch(`/tasks/${taskId}/assign`, {\n    userId\n  })\n};\n\n// Guest announcement endpoints\nexport const guests = {\n  create: (householdId, data) => apiClient.post(`/guests`, {\n    ...data,\n    householdId\n  }),\n  getHouseholdAnnouncements: householdId => apiClient.get(`/guests/household/${householdId}`),\n  update: (announcementId, data) => apiClient.patch(`/guests/${announcementId}`, data),\n  delete: announcementId => apiClient.delete(`/guests/${announcementId}`)\n};\nexport default apiClient;","map":{"version":3,"names":["axios","API_BASE_URL","process","env","REACT_APP_API_URL","apiClient","create","baseURL","headers","interceptors","request","use","config","token","localStorage","getItem","Authorization","error","Promise","reject","response","_error$response","_error$config$url","status","url","includes","removeItem","auth","login","email","password","post","register","username","verifyToken","get","getProfile","household","name","join","code","leave","householdId","getCurrent","getMembers","getDetails","tasks","data","getHouseholdTasks","updateStatus","taskId","patch","assignTask","userId","guests","getHouseholdAnnouncements","update","announcementId","delete"],"sources":["/Users/zacharypicard/Desktop/School/CIS 469/Final-CIS-469-Project/roommate-app/frontend/src/api/client.ts"],"sourcesContent":["import axios from 'axios';\n\nconst API_BASE_URL = process.env.REACT_APP_API_URL || 'http://localhost:8080/api';\n\nconst apiClient = axios.create({\n  baseURL: API_BASE_URL,\n  headers: {\n    'Content-Type': 'application/json',\n  },\n});\n\n// Add request interceptor to add auth token\napiClient.interceptors.request.use(\n  (config) => {\n    const token = localStorage.getItem('token');\n    if (token && config.headers) {\n      config.headers.Authorization = `Bearer ${token}`;\n    }\n    return config;\n  },\n  (error) => {\n    return Promise.reject(error);\n  }\n);\n\n// Add response interceptor to handle errors\napiClient.interceptors.response.use(\n  (response) => response,\n  (error) => {\n    // Only clear token and redirect on 401 if it's not a login request\n    if (error.response?.status === 401 && !error.config.url?.includes('/auth/login')) {\n      localStorage.removeItem('token');\n      localStorage.removeItem('householdId');\n    }\n    return Promise.reject(error);\n  }\n);\n\n// Auth endpoints\nexport const auth = {\n  login: (email: string, password: string) =>\n    apiClient.post('/auth/login', { email, password }),\n  register: (username: string, email: string, password: string) =>\n    apiClient.post('/auth/register', { username, email, password }),\n  verifyToken: () => apiClient.get('/auth/verify'),\n  getProfile: () => apiClient.get('/auth/profile'),\n};\n\n// Household endpoints\nexport const household = {\n  create: (name: string) => apiClient.post('/households', { name }),\n  join: (code: string) => apiClient.post('/households/join', { code }),\n  leave: (householdId: string) => apiClient.post(`/households/${householdId}/leave`),\n  getCurrent: () => apiClient.get('/households/current'),\n  getMembers: (householdId: string) => apiClient.get(`/households/${householdId}/members`),\n  getDetails: (householdId: string) => apiClient.get(`/households/${householdId}`),\n};\n\n// Task endpoints\nexport const tasks = {\n  create: (householdId: string, data: { title: string; description: string; dueDate: string; assignedTo?: string }) =>\n    apiClient.post(`/tasks`, { ...data, householdId }),\n  getHouseholdTasks: (householdId: string) =>\n    apiClient.get(`/tasks/household/${householdId}`),\n  updateStatus: (taskId: string, status: 'TODO' | 'IN_PROGRESS' | 'DONE' | 'PENDING' | 'COMPLETED' | 'OVERDUE') =>\n    apiClient.patch(`/tasks/${taskId}/status`, { status }),\n  assignTask: (taskId: string, userId: string) =>\n    apiClient.patch(`/tasks/${taskId}/assign`, { userId }),\n};\n\n// Guest announcement endpoints\nexport const guests = {\n  create: (householdId: string, data: { guestCount: number; startTime: string; endTime: string; description?: string }) =>\n    apiClient.post(`/guests`, { ...data, householdId }),\n  getHouseholdAnnouncements: (householdId: string) =>\n    apiClient.get(`/guests/household/${householdId}`),\n  update: (announcementId: string, data: { guestCount?: number; startTime?: string; endTime?: string; description?: string }) =>\n    apiClient.patch(`/guests/${announcementId}`, data),\n  delete: (announcementId: string) =>\n    apiClient.delete(`/guests/${announcementId}`),\n};\n\nexport default apiClient; "],"mappings":"AAAA,OAAOA,KAAK,MAAM,OAAO;AAEzB,MAAMC,YAAY,GAAGC,OAAO,CAACC,GAAG,CAACC,iBAAiB,IAAI,2BAA2B;AAEjF,MAAMC,SAAS,GAAGL,KAAK,CAACM,MAAM,CAAC;EAC7BC,OAAO,EAAEN,YAAY;EACrBO,OAAO,EAAE;IACP,cAAc,EAAE;EAClB;AACF,CAAC,CAAC;;AAEF;AACAH,SAAS,CAACI,YAAY,CAACC,OAAO,CAACC,GAAG,CAC/BC,MAAM,IAAK;EACV,MAAMC,KAAK,GAAGC,YAAY,CAACC,OAAO,CAAC,OAAO,CAAC;EAC3C,IAAIF,KAAK,IAAID,MAAM,CAACJ,OAAO,EAAE;IAC3BI,MAAM,CAACJ,OAAO,CAACQ,aAAa,GAAG,UAAUH,KAAK,EAAE;EAClD;EACA,OAAOD,MAAM;AACf,CAAC,EACAK,KAAK,IAAK;EACT,OAAOC,OAAO,CAACC,MAAM,CAACF,KAAK,CAAC;AAC9B,CACF,CAAC;;AAED;AACAZ,SAAS,CAACI,YAAY,CAACW,QAAQ,CAACT,GAAG,CAChCS,QAAQ,IAAKA,QAAQ,EACrBH,KAAK,IAAK;EAAA,IAAAI,eAAA,EAAAC,iBAAA;EACT;EACA,IAAI,EAAAD,eAAA,GAAAJ,KAAK,CAACG,QAAQ,cAAAC,eAAA,uBAAdA,eAAA,CAAgBE,MAAM,MAAK,GAAG,IAAI,GAAAD,iBAAA,GAACL,KAAK,CAACL,MAAM,CAACY,GAAG,cAAAF,iBAAA,eAAhBA,iBAAA,CAAkBG,QAAQ,CAAC,aAAa,CAAC,GAAE;IAChFX,YAAY,CAACY,UAAU,CAAC,OAAO,CAAC;IAChCZ,YAAY,CAACY,UAAU,CAAC,aAAa,CAAC;EACxC;EACA,OAAOR,OAAO,CAACC,MAAM,CAACF,KAAK,CAAC;AAC9B,CACF,CAAC;;AAED;AACA,OAAO,MAAMU,IAAI,GAAG;EAClBC,KAAK,EAAEA,CAACC,KAAa,EAAEC,QAAgB,KACrCzB,SAAS,CAAC0B,IAAI,CAAC,aAAa,EAAE;IAAEF,KAAK;IAAEC;EAAS,CAAC,CAAC;EACpDE,QAAQ,EAAEA,CAACC,QAAgB,EAAEJ,KAAa,EAAEC,QAAgB,KAC1DzB,SAAS,CAAC0B,IAAI,CAAC,gBAAgB,EAAE;IAAEE,QAAQ;IAAEJ,KAAK;IAAEC;EAAS,CAAC,CAAC;EACjEI,WAAW,EAAEA,CAAA,KAAM7B,SAAS,CAAC8B,GAAG,CAAC,cAAc,CAAC;EAChDC,UAAU,EAAEA,CAAA,KAAM/B,SAAS,CAAC8B,GAAG,CAAC,eAAe;AACjD,CAAC;;AAED;AACA,OAAO,MAAME,SAAS,GAAG;EACvB/B,MAAM,EAAGgC,IAAY,IAAKjC,SAAS,CAAC0B,IAAI,CAAC,aAAa,EAAE;IAAEO;EAAK,CAAC,CAAC;EACjEC,IAAI,EAAGC,IAAY,IAAKnC,SAAS,CAAC0B,IAAI,CAAC,kBAAkB,EAAE;IAAES;EAAK,CAAC,CAAC;EACpEC,KAAK,EAAGC,WAAmB,IAAKrC,SAAS,CAAC0B,IAAI,CAAC,eAAeW,WAAW,QAAQ,CAAC;EAClFC,UAAU,EAAEA,CAAA,KAAMtC,SAAS,CAAC8B,GAAG,CAAC,qBAAqB,CAAC;EACtDS,UAAU,EAAGF,WAAmB,IAAKrC,SAAS,CAAC8B,GAAG,CAAC,eAAeO,WAAW,UAAU,CAAC;EACxFG,UAAU,EAAGH,WAAmB,IAAKrC,SAAS,CAAC8B,GAAG,CAAC,eAAeO,WAAW,EAAE;AACjF,CAAC;;AAED;AACA,OAAO,MAAMI,KAAK,GAAG;EACnBxC,MAAM,EAAEA,CAACoC,WAAmB,EAAEK,IAAkF,KAC9G1C,SAAS,CAAC0B,IAAI,CAAC,QAAQ,EAAE;IAAE,GAAGgB,IAAI;IAAEL;EAAY,CAAC,CAAC;EACpDM,iBAAiB,EAAGN,WAAmB,IACrCrC,SAAS,CAAC8B,GAAG,CAAC,oBAAoBO,WAAW,EAAE,CAAC;EAClDO,YAAY,EAAEA,CAACC,MAAc,EAAE3B,MAA6E,KAC1GlB,SAAS,CAAC8C,KAAK,CAAC,UAAUD,MAAM,SAAS,EAAE;IAAE3B;EAAO,CAAC,CAAC;EACxD6B,UAAU,EAAEA,CAACF,MAAc,EAAEG,MAAc,KACzChD,SAAS,CAAC8C,KAAK,CAAC,UAAUD,MAAM,SAAS,EAAE;IAAEG;EAAO,CAAC;AACzD,CAAC;;AAED;AACA,OAAO,MAAMC,MAAM,GAAG;EACpBhD,MAAM,EAAEA,CAACoC,WAAmB,EAAEK,IAAsF,KAClH1C,SAAS,CAAC0B,IAAI,CAAC,SAAS,EAAE;IAAE,GAAGgB,IAAI;IAAEL;EAAY,CAAC,CAAC;EACrDa,yBAAyB,EAAGb,WAAmB,IAC7CrC,SAAS,CAAC8B,GAAG,CAAC,qBAAqBO,WAAW,EAAE,CAAC;EACnDc,MAAM,EAAEA,CAACC,cAAsB,EAAEV,IAAyF,KACxH1C,SAAS,CAAC8C,KAAK,CAAC,WAAWM,cAAc,EAAE,EAAEV,IAAI,CAAC;EACpDW,MAAM,EAAGD,cAAsB,IAC7BpD,SAAS,CAACqD,MAAM,CAAC,WAAWD,cAAc,EAAE;AAChD,CAAC;AAED,eAAepD,SAAS","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}