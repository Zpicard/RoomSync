{"ast":null,"code":"import axios from 'axios';\nconst API_BASE_URL = process.env.REACT_APP_API_URL || 'http://localhost:8080/api';\nconst apiClient = axios.create({\n  baseURL: API_BASE_URL,\n  headers: {\n    'Content-Type': 'application/json'\n  }\n});\n\n// Add request interceptor to add auth token\napiClient.interceptors.request.use(config => {\n  const token = localStorage.getItem('token');\n  if (token && config.headers) {\n    config.headers.Authorization = `Bearer ${token}`;\n  }\n  return config;\n}, error => {\n  return Promise.reject(error);\n});\n\n// Add response interceptor to handle errors\napiClient.interceptors.response.use(response => response, error => {\n  var _error$response, _error$config$url, _error$config$url2;\n  // Only clear token and redirect on 401 if it's not a login request or household creation\n  if (((_error$response = error.response) === null || _error$response === void 0 ? void 0 : _error$response.status) === 401 && !((_error$config$url = error.config.url) !== null && _error$config$url !== void 0 && _error$config$url.includes('/auth/login')) && !((_error$config$url2 = error.config.url) !== null && _error$config$url2 !== void 0 && _error$config$url2.includes('/households'))) {\n    localStorage.removeItem('token');\n    localStorage.removeItem('householdId');\n    window.location.href = '/login';\n  }\n  return Promise.reject(error);\n});\n\n// Auth endpoints\nexport const auth = {\n  login: (email, password) => apiClient.post('/auth/login', {\n    email,\n    password\n  }),\n  register: (username, email, password) => apiClient.post('/auth/register', {\n    username,\n    email,\n    password\n  }),\n  verifyToken: () => apiClient.get('/auth/verify'),\n  getProfile: () => apiClient.get('/auth/profile')\n};\n// Household endpoints\nexport const household = {\n  create: async data => {\n    const response = await apiClient.post('/households', data);\n    return response.data;\n  },\n  getAll: () => apiClient.get('/households'),\n  join: code => apiClient.post('/households/join', {\n    code\n  }),\n  leave: householdId => {\n    console.log('API: Leaving household', householdId);\n    return apiClient.post(`/households/${householdId}/leave`).catch(error => {\n      console.error('Error in leave API call:', error);\n      throw error;\n    });\n  },\n  getCurrent: () => apiClient.get('/households/current'),\n  getMembers: householdId => apiClient.get(`/households/${householdId}/members`),\n  getDetails: householdId => apiClient.get(`/households/${householdId}`),\n  transferOwnership: (householdId, newOwnerId) => apiClient.post(`/households/${householdId}/transfer-ownership`, {\n    newOwnerId\n  }),\n  disband: householdId => {\n    console.log('API: Disbanding household', householdId);\n    return apiClient.post(`/households/${householdId}/disband`);\n  },\n  kickMember: (householdId, memberId) => {\n    console.log('API: Kicking member', memberId, 'from household', householdId);\n    return apiClient.post(`/households/${householdId}/kick/${memberId}`);\n  },\n  invite: (householdId, email) => {\n    console.log('API: Inviting member', email, 'to household', householdId);\n    return apiClient.post(`/households/${householdId}/invite`, {\n      email\n    });\n  }\n};\n\n// Task endpoints\nexport const tasks = {\n  create: (householdId, data) => apiClient.post(`/tasks`, {\n    ...data,\n    householdId\n  }),\n  createForAllMembers: (householdId, data) => apiClient.post(`/tasks/all-members`, {\n    ...data,\n    householdId\n  }),\n  getHouseholdTasks: householdId => apiClient.get(`/tasks/household/${householdId}`),\n  updateStatus: (taskId, status) => apiClient.patch(`/tasks/${taskId}/status`, {\n    status\n  }),\n  assignTask: (taskId, userId) => apiClient.patch(`/tasks/${taskId}/assign`, {\n    userId\n  }),\n  delete: taskId => apiClient.delete(`/tasks/${taskId}`)\n};\n\n// Guest announcement endpoints\nexport const guests = {\n  create: (householdId, data) => apiClient.post(`/guests`, {\n    ...data,\n    householdId\n  }),\n  getHouseholdAnnouncements: householdId => apiClient.get(`/guests/household/${householdId}`),\n  update: (announcementId, data) => apiClient.patch(`/guests/${announcementId}`, data),\n  delete: announcementId => apiClient.delete(`/guests/${announcementId}`)\n};\n\n// Quiet time endpoints\nexport const quietTimes = {\n  create: (householdId, data) => apiClient.post(`/quiet-times`, {\n    ...data,\n    householdId\n  }),\n  getHouseholdQuietTimes: householdId => apiClient.get(`/quiet-times/household/${householdId}`),\n  update: (quietTimeId, data) => apiClient.patch(`/quiet-times/${quietTimeId}`, data),\n  delete: quietTimeId => apiClient.delete(`/quiet-times/${quietTimeId}`)\n};\nexport const user = {\n  updateAvatar: avatarUrl => apiClient.patch('/profile/avatar', {\n    avatarUrl\n  }),\n  getProfile: () => apiClient.get('/users/profile')\n};\nconst chat = {\n  getMessages: () => axios.get('/chat/messages'),\n  sendMessage: data => axios.post('/chat/messages', data)\n};\nexport default {\n  auth,\n  household,\n  tasks,\n  guests,\n  user,\n  chat,\n  quietTimes\n};","map":{"version":3,"names":["axios","API_BASE_URL","process","env","REACT_APP_API_URL","apiClient","create","baseURL","headers","interceptors","request","use","config","token","localStorage","getItem","Authorization","error","Promise","reject","response","_error$response","_error$config$url","_error$config$url2","status","url","includes","removeItem","window","location","href","auth","login","email","password","post","register","username","verifyToken","get","getProfile","household","data","getAll","join","code","leave","householdId","console","log","catch","getCurrent","getMembers","getDetails","transferOwnership","newOwnerId","disband","kickMember","memberId","invite","tasks","createForAllMembers","getHouseholdTasks","updateStatus","taskId","patch","assignTask","userId","delete","guests","getHouseholdAnnouncements","update","announcementId","quietTimes","getHouseholdQuietTimes","quietTimeId","user","updateAvatar","avatarUrl","chat","getMessages","sendMessage"],"sources":["/Users/zacharypicard/Desktop/School/CIS 469/Final-CIS-469-Project/roommate-app/frontend/src/api/client.ts"],"sourcesContent":["import axios from 'axios';\n\nconst API_BASE_URL = process.env.REACT_APP_API_URL || 'http://localhost:8080/api';\n\nconst apiClient = axios.create({\n  baseURL: API_BASE_URL,\n  headers: {\n    'Content-Type': 'application/json',\n  },\n});\n\n// Add request interceptor to add auth token\napiClient.interceptors.request.use(\n  (config) => {\n    const token = localStorage.getItem('token');\n    if (token && config.headers) {\n      config.headers.Authorization = `Bearer ${token}`;\n    }\n    return config;\n  },\n  (error) => {\n    return Promise.reject(error);\n  }\n);\n\n// Add response interceptor to handle errors\napiClient.interceptors.response.use(\n  (response) => response,\n  (error) => {\n    // Only clear token and redirect on 401 if it's not a login request or household creation\n    if (error.response?.status === 401 && \n        !error.config.url?.includes('/auth/login') && \n        !error.config.url?.includes('/households')) {\n      localStorage.removeItem('token');\n      localStorage.removeItem('householdId');\n      window.location.href = '/login';\n    }\n    return Promise.reject(error);\n  }\n);\n\n// Auth endpoints\nexport const auth = {\n  login: (email: string, password: string) =>\n    apiClient.post('/auth/login', { email, password }),\n  register: (username: string, email: string, password: string) =>\n    apiClient.post('/auth/register', { username, email, password }),\n  verifyToken: () => apiClient.get('/auth/verify'),\n  getProfile: () => apiClient.get('/auth/profile'),\n};\n\ninterface HouseholdCreateInput {\n  name: string;\n  isPrivate?: boolean;\n}\n\ninterface HouseholdResponse {\n  id: string;\n  name: string;\n  code: string;\n  isPrivate: boolean;\n}\n\n// Household endpoints\nexport const household = {\n  create: async (data: HouseholdCreateInput): Promise<HouseholdResponse> => {\n    const response = await apiClient.post<HouseholdResponse>('/households', data);\n    return response.data;\n  },\n  getAll: () => apiClient.get('/households'),\n  join: (code: string) => apiClient.post('/households/join', { code }),\n  leave: (householdId: string) => {\n    console.log('API: Leaving household', householdId);\n    return apiClient.post<{ message: string }>(`/households/${householdId}/leave`)\n      .catch(error => {\n        console.error('Error in leave API call:', error);\n        throw error;\n      });\n  },\n  getCurrent: () => apiClient.get('/households/current'),\n  getMembers: (householdId: string) => apiClient.get(`/households/${householdId}/members`),\n  getDetails: (householdId: string) => apiClient.get(`/households/${householdId}`),\n  transferOwnership: (householdId: string, newOwnerId: string) => \n    apiClient.post(`/households/${householdId}/transfer-ownership`, { newOwnerId }),\n  disband: (householdId: string) => {\n    console.log('API: Disbanding household', householdId);\n    return apiClient.post(`/households/${householdId}/disband`);\n  },\n  kickMember: (householdId: string, memberId: string) => {\n    console.log('API: Kicking member', memberId, 'from household', householdId);\n    return apiClient.post<{ message: string }>(`/households/${householdId}/kick/${memberId}`);\n  },\n  invite: (householdId: string, email: string) => {\n    console.log('API: Inviting member', email, 'to household', householdId);\n    return apiClient.post<{ message: string }>(`/households/${householdId}/invite`, { email });\n  },\n};\n\n// Task endpoints\nexport const tasks = {\n  create: (householdId: string, data: { title: string; description: string; dueDate: string; assignedToId?: string }) =>\n    apiClient.post(`/tasks`, { ...data, householdId }),\n  createForAllMembers: (householdId: string, data: { title: string; description: string; dueDate: string }) =>\n    apiClient.post(`/tasks/all-members`, { ...data, householdId }),\n  getHouseholdTasks: (householdId: string) =>\n    apiClient.get(`/tasks/household/${householdId}`),\n  updateStatus: (taskId: string, status: 'TODO' | 'IN_PROGRESS' | 'DONE' | 'PENDING' | 'COMPLETED' | 'OVERDUE') =>\n    apiClient.patch(`/tasks/${taskId}/status`, { status }),\n  assignTask: (taskId: string, userId: string) =>\n    apiClient.patch(`/tasks/${taskId}/assign`, { userId }),\n  delete: (taskId: string) =>\n    apiClient.delete(`/tasks/${taskId}`),\n};\n\n// Guest announcement endpoints\nexport const guests = {\n  create: (householdId: string, data: { guestCount: number; startTime: string; endTime: string; description?: string }) =>\n    apiClient.post(`/guests`, { ...data, householdId }),\n  getHouseholdAnnouncements: (householdId: string) =>\n    apiClient.get(`/guests/household/${householdId}`),\n  update: (announcementId: string, data: { guestCount?: number; startTime?: string; endTime?: string; description?: string }) =>\n    apiClient.patch(`/guests/${announcementId}`, data),\n  delete: (announcementId: string) =>\n    apiClient.delete(`/guests/${announcementId}`),\n};\n\n// Quiet time endpoints\nexport const quietTimes = {\n  create: (householdId: string, data: { \n    title: string;\n    type: 'exam' | 'study' | 'quiet';\n    startTime: string;\n    endTime: string;\n    description?: string;\n  }) => apiClient.post(`/quiet-times`, { ...data, householdId }),\n  \n  getHouseholdQuietTimes: (householdId: string) =>\n    apiClient.get(`/quiet-times/household/${householdId}`),\n    \n  update: (quietTimeId: string, data: {\n    title?: string;\n    type?: 'exam' | 'study' | 'quiet';\n    startTime?: string;\n    endTime?: string;\n    description?: string;\n  }) => apiClient.patch(`/quiet-times/${quietTimeId}`, data),\n  \n  delete: (quietTimeId: string) =>\n    apiClient.delete(`/quiet-times/${quietTimeId}`),\n};\n\nexport const user = {\n  updateAvatar: (avatarUrl: string) =>\n    apiClient.patch('/profile/avatar', { avatarUrl }),\n  getProfile: () =>\n    apiClient.get('/users/profile'),\n};\n\nconst chat = {\n  getMessages: () => axios.get('/chat/messages'),\n  sendMessage: (data: { content: string }) => axios.post('/chat/messages', data),\n};\n\nexport default {\n  auth,\n  household,\n  tasks,\n  guests,\n  user,\n  chat,\n  quietTimes,\n}; "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}