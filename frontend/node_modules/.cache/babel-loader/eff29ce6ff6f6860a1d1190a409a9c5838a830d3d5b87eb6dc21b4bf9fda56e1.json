{"ast":null,"code":"// Constants for localStorage keys\nexport const STORAGE_KEYS = {\n  TOKEN: 'token',\n  HOUSEHOLD_ID: 'householdId',\n  USER_ID: 'userId',\n  THEME: 'theme'\n};\n\n// Token management\nexport const TokenManager = {\n  getToken: () => {\n    try {\n      return localStorage.getItem(STORAGE_KEYS.TOKEN);\n    } catch (error) {\n      console.error('Error getting token:', error);\n      return null;\n    }\n  },\n  setToken: token => {\n    try {\n      localStorage.setItem(STORAGE_KEYS.TOKEN, token);\n    } catch (error) {\n      console.error('Error setting token:', error);\n    }\n  },\n  removeToken: () => {\n    try {\n      localStorage.removeItem(STORAGE_KEYS.TOKEN);\n    } catch (error) {\n      console.error('Error removing token:', error);\n    }\n  },\n  clearAuthData: () => {\n    try {\n      localStorage.removeItem(STORAGE_KEYS.TOKEN);\n      localStorage.removeItem(STORAGE_KEYS.HOUSEHOLD_ID);\n      localStorage.removeItem(STORAGE_KEYS.USER_ID);\n    } catch (error) {\n      console.error('Error clearing auth data:', error);\n    }\n  }\n};\n\n// Input sanitization\nexport const sanitizeInput = input => {\n  return input.replace(/[<>]/g, '') // Remove < and >\n  .replace(/javascript:/gi, '') // Remove javascript: protocol\n  .replace(/on\\w+=/gi, '') // Remove event handlers\n  .trim();\n};\n\n// URL validation\nexport const isValidUrl = url => {\n  try {\n    new URL(url);\n    return true;\n  } catch {\n    return false;\n  }\n};\n\n// Password strength validation\nexport const validatePasswordStrength = password => {\n  const minLength = 8;\n  const hasUpperCase = /[A-Z]/.test(password);\n  const hasLowerCase = /[a-z]/.test(password);\n  const hasNumbers = /\\d/.test(password);\n  const hasSpecialChar = /[!@#$%^&*(),.?\":{}|<>]/.test(password);\n  if (password.length < minLength) {\n    return {\n      isValid: false,\n      message: 'Password must be at least 8 characters long'\n    };\n  }\n  if (!hasUpperCase || !hasLowerCase) {\n    return {\n      isValid: false,\n      message: 'Password must contain both uppercase and lowercase letters'\n    };\n  }\n  if (!hasNumbers) {\n    return {\n      isValid: false,\n      message: 'Password must contain at least one number'\n    };\n  }\n  if (!hasSpecialChar) {\n    return {\n      isValid: false,\n      message: 'Password must contain at least one special character'\n    };\n  }\n  return {\n    isValid: true,\n    message: 'Password is strong'\n  };\n};\n\n// XSS prevention for HTML content\nexport const escapeHtml = unsafe => {\n  return unsafe.replace(/&/g, '&amp;').replace(/</g, '&lt;').replace(/>/g, '&gt;').replace(/\"/g, '&quot;').replace(/'/g, '&#039;');\n};","map":{"version":3,"names":["STORAGE_KEYS","TOKEN","HOUSEHOLD_ID","USER_ID","THEME","TokenManager","getToken","localStorage","getItem","error","console","setToken","token","setItem","removeToken","removeItem","clearAuthData","sanitizeInput","input","replace","trim","isValidUrl","url","URL","validatePasswordStrength","password","minLength","hasUpperCase","test","hasLowerCase","hasNumbers","hasSpecialChar","length","isValid","message","escapeHtml","unsafe"],"sources":["/Users/zacharypicard/Desktop/School/CIS 469/Final-CIS-469-Project/roommate-app/frontend/src/utils/security.ts"],"sourcesContent":["// Constants for localStorage keys\nexport const STORAGE_KEYS = {\n  TOKEN: 'token',\n  HOUSEHOLD_ID: 'householdId',\n  USER_ID: 'userId',\n  THEME: 'theme',\n} as const;\n\n// Token management\nexport const TokenManager = {\n  getToken: (): string | null => {\n    try {\n      return localStorage.getItem(STORAGE_KEYS.TOKEN);\n    } catch (error) {\n      console.error('Error getting token:', error);\n      return null;\n    }\n  },\n\n  setToken: (token: string): void => {\n    try {\n      localStorage.setItem(STORAGE_KEYS.TOKEN, token);\n    } catch (error) {\n      console.error('Error setting token:', error);\n    }\n  },\n\n  removeToken: (): void => {\n    try {\n      localStorage.removeItem(STORAGE_KEYS.TOKEN);\n    } catch (error) {\n      console.error('Error removing token:', error);\n    }\n  },\n\n  clearAuthData: (): void => {\n    try {\n      localStorage.removeItem(STORAGE_KEYS.TOKEN);\n      localStorage.removeItem(STORAGE_KEYS.HOUSEHOLD_ID);\n      localStorage.removeItem(STORAGE_KEYS.USER_ID);\n    } catch (error) {\n      console.error('Error clearing auth data:', error);\n    }\n  },\n};\n\n// Input sanitization\nexport const sanitizeInput = (input: string): string => {\n  return input\n    .replace(/[<>]/g, '') // Remove < and >\n    .replace(/javascript:/gi, '') // Remove javascript: protocol\n    .replace(/on\\w+=/gi, '') // Remove event handlers\n    .trim();\n};\n\n// URL validation\nexport const isValidUrl = (url: string): boolean => {\n  try {\n    new URL(url);\n    return true;\n  } catch {\n    return false;\n  }\n};\n\n// Password strength validation\nexport const validatePasswordStrength = (password: string): {\n  isValid: boolean;\n  message: string;\n} => {\n  const minLength = 8;\n  const hasUpperCase = /[A-Z]/.test(password);\n  const hasLowerCase = /[a-z]/.test(password);\n  const hasNumbers = /\\d/.test(password);\n  const hasSpecialChar = /[!@#$%^&*(),.?\":{}|<>]/.test(password);\n\n  if (password.length < minLength) {\n    return {\n      isValid: false,\n      message: 'Password must be at least 8 characters long',\n    };\n  }\n\n  if (!hasUpperCase || !hasLowerCase) {\n    return {\n      isValid: false,\n      message: 'Password must contain both uppercase and lowercase letters',\n    };\n  }\n\n  if (!hasNumbers) {\n    return {\n      isValid: false,\n      message: 'Password must contain at least one number',\n    };\n  }\n\n  if (!hasSpecialChar) {\n    return {\n      isValid: false,\n      message: 'Password must contain at least one special character',\n    };\n  }\n\n  return {\n    isValid: true,\n    message: 'Password is strong',\n  };\n};\n\n// XSS prevention for HTML content\nexport const escapeHtml = (unsafe: string): string => {\n  return unsafe\n    .replace(/&/g, '&amp;')\n    .replace(/</g, '&lt;')\n    .replace(/>/g, '&gt;')\n    .replace(/\"/g, '&quot;')\n    .replace(/'/g, '&#039;');\n}; "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}