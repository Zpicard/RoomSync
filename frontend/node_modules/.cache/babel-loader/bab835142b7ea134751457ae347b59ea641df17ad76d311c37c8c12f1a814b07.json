{"ast":null,"code":"var _jsxFileName = \"/Users/zacharypicard/Desktop/School/CIS 469/Final-CIS-469-Project/roommate-app/frontend/src/context/AuthContext.tsx\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\nimport React, { createContext, useContext, useState, useEffect } from 'react';\nimport { auth } from '../api/client';\nimport { useNavigate } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst AuthContext = /*#__PURE__*/createContext(undefined);\nexport const AuthProvider = ({\n  children\n}) => {\n  _s();\n  const [user, setUser] = useState(null);\n  const [token, setToken] = useState(null);\n  const [error, setError] = useState(null);\n  const isAuthenticated = !!token;\n  const navigate = useNavigate();\n  useEffect(() => {\n    const initializeAuth = async () => {\n      const storedToken = localStorage.getItem('token');\n      const savedHouseholdId = localStorage.getItem('householdId');\n      if (storedToken) {\n        try {\n          const response = await auth.getProfile();\n          const userData = response.data;\n\n          // If we have a saved householdId and the user doesn't have one, use the saved one\n          if (savedHouseholdId && !userData.householdId) {\n            userData.householdId = savedHouseholdId;\n          }\n          setUser(userData);\n          setToken(storedToken);\n\n          // Save householdId if it exists\n          if (userData.householdId) {\n            localStorage.setItem('householdId', userData.householdId);\n          }\n        } catch (error) {\n          console.error('Failed to fetch user profile:', error);\n          localStorage.removeItem('token');\n          localStorage.removeItem('householdId');\n        }\n      }\n    };\n    initializeAuth();\n  }, []);\n  const login = async (email, password) => {\n    try {\n      setError(null);\n      const response = await auth.login(email, password);\n      const {\n        token,\n        user\n      } = response.data;\n\n      // Set token first\n      setToken(token);\n      localStorage.setItem('token', token);\n\n      // Then set user\n      setUser(user);\n\n      // Save householdId if it exists\n      if (user.householdId) {\n        localStorage.setItem('householdId', user.householdId);\n      }\n\n      // Navigate to dashboard after successful login\n      navigate('/');\n      return Promise.resolve();\n    } catch (error) {\n      var _error$response, _error$response$data;\n      const errorMessage = ((_error$response = error.response) === null || _error$response === void 0 ? void 0 : (_error$response$data = _error$response.data) === null || _error$response$data === void 0 ? void 0 : _error$response$data.error) || 'Login failed. Please try again.';\n      setError(errorMessage);\n      console.error('Login error:', error);\n      return Promise.reject(error);\n    }\n  };\n  const register = async (username, email, password) => {\n    try {\n      setError(null);\n      const response = await auth.register(username, email, password);\n      const {\n        token,\n        user\n      } = response.data;\n\n      // Set token first\n      setToken(token);\n      localStorage.setItem('token', token);\n\n      // Then set user\n      setUser(user);\n\n      // Save householdId if it exists\n      if (user.householdId) {\n        localStorage.setItem('householdId', user.householdId);\n      }\n\n      // Navigate to dashboard after successful registration\n      navigate('/');\n      return Promise.resolve();\n    } catch (error) {\n      var _error$response2, _error$response2$data;\n      const errorMessage = ((_error$response2 = error.response) === null || _error$response2 === void 0 ? void 0 : (_error$response2$data = _error$response2.data) === null || _error$response2$data === void 0 ? void 0 : _error$response2$data.error) || 'Registration failed. Please try again.';\n      setError(errorMessage);\n      console.error('Registration error:', error);\n      return Promise.reject(error);\n    }\n  };\n  const logout = () => {\n    setUser(null);\n    setToken(null);\n    localStorage.removeItem('token');\n    localStorage.removeItem('householdId');\n    navigate('/login');\n  };\n  const updateUser = updatedUser => {\n    setUser(updatedUser);\n\n    // Update householdId in localStorage if it changed\n    if (updatedUser.householdId) {\n      localStorage.setItem('householdId', updatedUser.householdId);\n    } else {\n      localStorage.removeItem('householdId');\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(AuthContext.Provider, {\n    value: {\n      user,\n      token,\n      error,\n      isAuthenticated,\n      login,\n      register,\n      logout,\n      updateUser\n    },\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 144,\n    columnNumber: 5\n  }, this);\n};\n_s(AuthProvider, \"YZ4GV5q81ncE+CjElXCNdcL04Io=\", false, function () {\n  return [useNavigate];\n});\n_c = AuthProvider;\nexport const useAuth = () => {\n  _s2();\n  const context = useContext(AuthContext);\n  if (context === undefined) {\n    throw new Error('useAuth must be used within an AuthProvider');\n  }\n  return context;\n};\n_s2(useAuth, \"b9L3QQ+jgeyIrH0NfHrJ8nn7VMU=\");\nvar _c;\n$RefreshReg$(_c, \"AuthProvider\");","map":{"version":3,"names":["React","createContext","useContext","useState","useEffect","auth","useNavigate","jsxDEV","_jsxDEV","AuthContext","undefined","AuthProvider","children","_s","user","setUser","token","setToken","error","setError","isAuthenticated","navigate","initializeAuth","storedToken","localStorage","getItem","savedHouseholdId","response","getProfile","userData","data","householdId","setItem","console","removeItem","login","email","password","Promise","resolve","_error$response","_error$response$data","errorMessage","reject","register","username","_error$response2","_error$response2$data","logout","updateUser","updatedUser","Provider","value","fileName","_jsxFileName","lineNumber","columnNumber","_c","useAuth","_s2","context","Error","$RefreshReg$"],"sources":["/Users/zacharypicard/Desktop/School/CIS 469/Final-CIS-469-Project/roommate-app/frontend/src/context/AuthContext.tsx"],"sourcesContent":["import React, { createContext, useContext, useState, useEffect } from 'react';\nimport { auth } from '../api/client';\nimport { useNavigate } from 'react-router-dom';\nimport { User } from '../types/user';\n\ninterface AuthResponse {\n  token: string;\n  user: User;\n}\n\ninterface AuthContextType {\n  user: User | null;\n  token: string | null;\n  error: string | null;\n  isAuthenticated: boolean;\n  login: (email: string, password: string) => Promise<void>;\n  register: (username: string, email: string, password: string) => Promise<void>;\n  logout: () => void;\n  updateUser: (updatedUser: User) => void;\n}\n\nconst AuthContext = createContext<AuthContextType | undefined>(undefined);\n\nexport const AuthProvider: React.FC<{ children: React.ReactNode }> = ({ children }) => {\n  const [user, setUser] = useState<User | null>(null);\n  const [token, setToken] = useState<string | null>(null);\n  const [error, setError] = useState<string | null>(null);\n  const isAuthenticated = !!token;\n  const navigate = useNavigate();\n\n  useEffect(() => {\n    const initializeAuth = async () => {\n      const storedToken = localStorage.getItem('token');\n      const savedHouseholdId = localStorage.getItem('householdId');\n      \n      if (storedToken) {\n        try {\n          const response = await auth.getProfile();\n          const userData = response.data as User;\n          \n          // If we have a saved householdId and the user doesn't have one, use the saved one\n          if (savedHouseholdId && !userData.householdId) {\n            userData.householdId = savedHouseholdId;\n          }\n          \n          setUser(userData);\n          setToken(storedToken);\n          \n          // Save householdId if it exists\n          if (userData.householdId) {\n            localStorage.setItem('householdId', userData.householdId);\n          }\n        } catch (error) {\n          console.error('Failed to fetch user profile:', error);\n          localStorage.removeItem('token');\n          localStorage.removeItem('householdId');\n        }\n      }\n    };\n\n    initializeAuth();\n  }, []);\n\n  const login = async (email: string, password: string) => {\n    try {\n      setError(null);\n      const response = await auth.login(email, password);\n      const { token, user } = response.data as AuthResponse;\n      \n      // Set token first\n      setToken(token);\n      localStorage.setItem('token', token);\n      \n      // Then set user\n      setUser(user);\n      \n      // Save householdId if it exists\n      if (user.householdId) {\n        localStorage.setItem('householdId', user.householdId);\n      }\n      \n      // Navigate to dashboard after successful login\n      navigate('/');\n      \n      return Promise.resolve();\n    } catch (error: any) {\n      const errorMessage = error.response?.data?.error || 'Login failed. Please try again.';\n      setError(errorMessage);\n      console.error('Login error:', error);\n      return Promise.reject(error);\n    }\n  };\n\n  const register = async (username: string, email: string, password: string) => {\n    try {\n      setError(null);\n      const response = await auth.register(username, email, password);\n      const { token, user } = response.data as AuthResponse;\n      \n      // Set token first\n      setToken(token);\n      localStorage.setItem('token', token);\n      \n      // Then set user\n      setUser(user);\n      \n      // Save householdId if it exists\n      if (user.householdId) {\n        localStorage.setItem('householdId', user.householdId);\n      }\n      \n      // Navigate to dashboard after successful registration\n      navigate('/');\n      \n      return Promise.resolve();\n    } catch (error: any) {\n      const errorMessage = error.response?.data?.error || 'Registration failed. Please try again.';\n      setError(errorMessage);\n      console.error('Registration error:', error);\n      return Promise.reject(error);\n    }\n  };\n\n  const logout = () => {\n    setUser(null);\n    setToken(null);\n    localStorage.removeItem('token');\n    localStorage.removeItem('householdId');\n    navigate('/login');\n  };\n\n  const updateUser = (updatedUser: User) => {\n    setUser(updatedUser);\n    \n    // Update householdId in localStorage if it changed\n    if (updatedUser.householdId) {\n      localStorage.setItem('householdId', updatedUser.householdId);\n    } else {\n      localStorage.removeItem('householdId');\n    }\n  };\n\n  return (\n    <AuthContext.Provider value={{ user, token, error, isAuthenticated, login, register, logout, updateUser }}>\n      {children}\n    </AuthContext.Provider>\n  );\n};\n\nexport const useAuth = () => {\n  const context = useContext(AuthContext);\n  if (context === undefined) {\n    throw new Error('useAuth must be used within an AuthProvider');\n  }\n  return context;\n}; "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}