{"ast":null,"code":"import axios from 'axios';\nconst API_BASE_URL = import.meta.env.VITE_API_URL || 'http://localhost:8080/api';\nconst apiClient = axios.create({\n  baseURL: API_BASE_URL,\n  headers: {\n    'Content-Type': 'application/json'\n  }\n});\n\n// Add request interceptor for authentication\napiClient.interceptors.request.use(config => {\n  const token = localStorage.getItem('token');\n  if (token && config.headers) {\n    config.headers.Authorization = `Bearer ${token}`;\n  }\n  return config;\n}, error => {\n  return Promise.reject(error);\n});\n\n// Add response interceptor for error handling\napiClient.interceptors.response.use(response => response, error => {\n  var _error$response;\n  if (((_error$response = error.response) === null || _error$response === void 0 ? void 0 : _error$response.status) === 401) {\n    // Handle unauthorized access\n    localStorage.removeItem('token');\n    window.location.href = '/login';\n  }\n  return Promise.reject(error);\n});\n\n// Auth API\nexport const auth = {\n  register: data => apiClient.post('/auth/register', data),\n  login: data => apiClient.post('/auth/login', data),\n  getProfile: () => apiClient.get('/profile'),\n  updateProfile: data => apiClient.patch('/profile', data)\n};\n\n// Household API\nexport const household = {\n  create: data => apiClient.post('/households', data),\n  getMembers: householdId => apiClient.get(`/households/${householdId}/members`),\n  inviteMember: (householdId, data) => apiClient.post(`/households/${householdId}/invite`, data),\n  respondToInvite: (inviteId, data) => apiClient.post(`/households/invite/${inviteId}/respond`, data)\n};\n\n// Tasks API\nexport const tasks = {\n  create: data => apiClient.post('/tasks', data),\n  getHouseholdTasks: householdId => apiClient.get(`/tasks/household/${householdId}`),\n  updateStatus: (taskId, data) => apiClient.patch(`/tasks/${taskId}/status`, data),\n  delete: taskId => apiClient.delete(`/tasks/${taskId}`)\n};\n\n// Guests API\nexport const guests = {\n  create: data => apiClient.post('/guests', data),\n  getHouseholdAnnouncements: householdId => apiClient.get(`/guests/household/${householdId}`),\n  update: (announcementId, data) => apiClient.patch(`/guests/${announcementId}`, data),\n  delete: announcementId => apiClient.delete(`/guests/${announcementId}`)\n};\nexport default apiClient;","map":{"version":3,"names":["axios","API_BASE_URL","import","meta","env","VITE_API_URL","apiClient","create","baseURL","headers","interceptors","request","use","config","token","localStorage","getItem","Authorization","error","Promise","reject","response","_error$response","status","removeItem","window","location","href","auth","register","data","post","login","getProfile","get","updateProfile","patch","household","getMembers","householdId","inviteMember","respondToInvite","inviteId","tasks","getHouseholdTasks","updateStatus","taskId","delete","guests","getHouseholdAnnouncements","update","announcementId"],"sources":["/Users/zacharypicard/Desktop/School/CIS 469/Final-CIS-469-Project/roommate-app/frontend/src/api/client.ts"],"sourcesContent":["import axios from 'axios';\nimport type { InternalAxiosRequestConfig, AxiosResponse, AxiosError } from 'axios';\n\nconst API_BASE_URL = import.meta.env.VITE_API_URL || 'http://localhost:8080/api';\n\nconst apiClient = axios.create({\n  baseURL: API_BASE_URL,\n  headers: {\n    'Content-Type': 'application/json',\n  },\n});\n\n// Add request interceptor for authentication\napiClient.interceptors.request.use(\n  (config: InternalAxiosRequestConfig) => {\n    const token = localStorage.getItem('token');\n    if (token && config.headers) {\n      config.headers.Authorization = `Bearer ${token}`;\n    }\n    return config;\n  },\n  (error: AxiosError) => {\n    return Promise.reject(error);\n  }\n);\n\n// Add response interceptor for error handling\napiClient.interceptors.response.use(\n  (response: AxiosResponse) => response,\n  (error: AxiosError) => {\n    if (error.response?.status === 401) {\n      // Handle unauthorized access\n      localStorage.removeItem('token');\n      window.location.href = '/login';\n    }\n    return Promise.reject(error);\n  }\n);\n\n// Auth API\nexport const auth = {\n  register: (data: { email: string; username: string; password: string }) =>\n    apiClient.post('/auth/register', data),\n  login: (data: { email: string; password: string }) =>\n    apiClient.post('/auth/login', data),\n  getProfile: () => apiClient.get('/profile'),\n  updateProfile: (data: { bio?: string; avatarUrl?: string }) =>\n    apiClient.patch('/profile', data),\n};\n\n// Household API\nexport const household = {\n  create: (data: { name: string }) => apiClient.post('/households', data),\n  getMembers: (householdId: string) => \n    apiClient.get(`/households/${householdId}/members`),\n  inviteMember: (householdId: string, data: { email: string }) =>\n    apiClient.post(`/households/${householdId}/invite`, data),\n  respondToInvite: (inviteId: string, data: { accept: boolean }) =>\n    apiClient.post(`/households/invite/${inviteId}/respond`, data),\n};\n\n// Tasks API\nexport const tasks = {\n  create: (data: { title: string; description?: string; dueDate: string; assignedToId: string; householdId: string }) =>\n    apiClient.post('/tasks', data),\n  getHouseholdTasks: (householdId: string) =>\n    apiClient.get(`/tasks/household/${householdId}`),\n  updateStatus: (taskId: string, data: { status: 'PENDING' | 'COMPLETED' | 'OVERDUE' }) =>\n    apiClient.patch(`/tasks/${taskId}/status`, data),\n  delete: (taskId: string) => apiClient.delete(`/tasks/${taskId}`),\n};\n\n// Guests API\nexport const guests = {\n  create: (data: { guestCount: number; startTime: string; endTime: string; description?: string; householdId: string }) =>\n    apiClient.post('/guests', data),\n  getHouseholdAnnouncements: (householdId: string) =>\n    apiClient.get(`/guests/household/${householdId}`),\n  update: (announcementId: string, data: { guestCount?: number; startTime?: string; endTime?: string; description?: string }) =>\n    apiClient.patch(`/guests/${announcementId}`, data),\n  delete: (announcementId: string) => apiClient.delete(`/guests/${announcementId}`),\n};\n\nexport default apiClient; "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}